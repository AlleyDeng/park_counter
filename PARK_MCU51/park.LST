C51 COMPILER V9.53.0.0   PARK                                                              04/20/2019 14:05:00 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE PARK
OBJECT MODULE PLACED IN park.OBJ
COMPILER INVOKED BY: D:\Program Files\Keil_v5\C51\BIN\C51.EXE park.c COMPACT OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "park.h"
   2          
   3          void delay_ms(unsigned int ms)
   4          {
   5   1              unsigned int i, j;
   6   1              
   7   1              for (i = ms; i > 0; i--)
   8   1              {
   9   2                      for (j = 110; j > 0; j--);
  10   2              }
  11   1      }
  12          
  13          void enter_into(void)
  14          {
  15   1              unsigned char i;
  16   1              char str[10];
  17   1              if (capacity > 0 && isAllow)
  18   1              {
  19   2                      EA = 0;
  20   2                      LcdWriteCom(0x80+0x40);
  21   2                      LcdWriteStr("    Welcome!    ");
  22   2                      bar_up(3000);
  23   2                      delay_ms(8000);
  24   2                      bar_down(3000); 
  25   2                      capacity--;
  26   2                      sprintf(dis_data, "   SPACE: %03d   ", capacity);
  27   2                      LcdInit();
  28   2                      for(i=0;i<16 && dis_data[i] != 0;i++)
  29   2                      {
  30   3                              LcdWriteData(dis_data[i]);      
  31   3                      }
  32   2                      LcdWriteCom(0x80+0x40);
  33   2                      LcdWriteStr("                ");
  34   2                      
  35   2                      sprintf(str, "M%.1d%03d\n", isAllow, capacity);
  36   2                      sendString(str);
  37   2                      
  38   2              
  39   2                      EA = 1;
  40   2              }
  41   1              else if (capacity == 0)
  42   1              {
  43   2                      LcdWriteCom(0x80+0x40);
  44   2                      LcdWriteStr("THE PARK IS FULL");
  45   2              }
  46   1      
  47   1      }
  48          
  49          void leave_out(char *buf)
  50          {
  51   1              unsigned char i;
  52   1              char str[10];
  53   1              if (capacity < MAXSIZE && isAllow)
  54   1              {
  55   2                      EA = 0;
C51 COMPILER V9.53.0.0   PARK                                                              04/20/2019 14:05:00 PAGE 2   

  56   2                      LcdWriteCom(0x80+0x40);
  57   2                      LcdWriteStr(buf);
  58   2                      bar_up(3000);
  59   2                      delay_ms(8000);
  60   2                      bar_down(3000);
  61   2                      capacity++;
  62   2                      sprintf(dis_data, "   SPACE: %03d   ", capacity);
  63   2                      LcdInit();
  64   2                      for(i=0;i<16 && dis_data[i] != 0;i++)
  65   2                      {
  66   3                              LcdWriteData(dis_data[i]);      
  67   3                      }
  68   2                      LcdWriteCom(0x80+0x40);
  69   2                      LcdWriteStr("                ");
  70   2                      
  71   2                      sprintf(str, "M%.1d%03d\n", isAllow, capacity);
  72   2                      sendString(str);
  73   2                      
  74   2                      EA = 1;
  75   2              }       
  76   1      }
  77          
  78          void bar_up(unsigned int nms)
  79          {
  80   1              sendString("BARUP\n");
  81   1              EA = 0;
  82   1              P10 = 0;
  83   1              P11 = 1;
  84   1              delay_ms(nms);
  85   1              P11 = 0;
  86   1              sendString("OK\n");
  87   1              EA = 1;
  88   1      }
  89          
  90          void bar_down(unsigned int nms)
  91          {
  92   1              sendString("BARDOWN\n");
  93   1              EA = 0;
  94   1              P10 = 1;
  95   1              P11 = 0;
  96   1              delay_ms(nms);
  97   1              P10 = 0;
  98   1              sendString("OK\n");
  99   1              EA = 1;
 100   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    585    ----
   CONSTANT SIZE    =    100    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----      29
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
