C51 COMPILER V9.53.0.0   UART                                                              04/25/2019 22:01:29 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN uart.OBJ
COMPILER INVOKED BY: D:\Program Files\Keil_v5\C51\BIN\C51.EXE uart.c COMPACT OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "uart.h"
   2          #include "lcd.h"
   3          #include "park.h"
   4          #include <string.h>
   5          #include <stdlib.h>
   6          
   7          void sendMessage(char *comm)
   8          {
   9   1              EA = 0;
  10   1              if (strncmp(comm, "GETMSG", 6) == 0)
  11   1              {
  12   2                      // do it
  13   2                      char temp[20];
  14   2                      sendString("OPEN\n");
  15   2                      sprintf(temp, "M%.1d%03d\n", isAllow, capacity);
  16   2                      sendString(temp);
  17   2                      
  18   2                      delay_ms(10);
  19   2                      sendString("OK\n");
  20   2              }
  21   1              EA = 1;
  22   1      }
  23          
  24          // 将字符串中小写字母转换为大写字母
  25          void stringUper(char *str)
  26          {
  27   1              EA = 0;
  28   1              if (str == NULL)
  29   1              {
  30   2                      return;
  31   2              }
  32   1              while (*str != 0)
  33   1              {
  34   2                      if (*str >= 'a' && *str <= 'z')
  35   2                      {
  36   3                              *str -= 32;
  37   3                      }
  38   2                      str++;
  39   2              }
  40   1              EA = 1;
  41   1      }
  42          
  43          // 设置剩余车位数量
  44          void setSpaceComm(char *numStr)
  45          {
  46   1              int num = 0;
  47   1              EA = 0;
  48   1              sendString("SETSPACE\n");
  49   1              while (*numStr != 0)
  50   1              {
  51   2                      num = num * 10 + *numStr - '0';
  52   2                      numStr++;
  53   2              }
  54   1              if (num <= MAXSIZE)
  55   1              {
C51 COMPILER V9.53.0.0   UART                                                              04/25/2019 22:01:29 PAGE 2   

  56   2                      char temp[20];
  57   2                      
  58   2                      capacity = num;
  59   2                      sprintf(dis_data, "   SPACE: %03d   ", capacity);
  60   2                      LcdWriteCom(0x80);
  61   2                      LcdWriteStr(dis_data);  
  62   2                      LcdWriteCom(0x80+0x40);
  63   2                      LcdWriteStr("                ");
  64   2                      
  65   2                      delay_ms(10);
  66   2                      sendString("OK\n");
  67   2                      delay_ms(10);
  68   2                      sprintf(temp, "M%.1d%03d\n", isAllow, capacity);
  69   2                      sendString(temp);
  70   2              }
  71   1              EA = 1;
  72   1      }
  73          
  74          // 设置使用状态
  75          void setAllow(char *comm)
  76          {
  77   1              char temp[20];
  78   1              EA = 0;
  79   1              sendString("SETALLOWANCE\n");   
  80   1              sendString(comm);
  81   1              sendString("\n");
  82   1              if (strncmp(comm, "ALLOW", 5) == 0)
  83   1              {
  84   2                      isAllow = 1;
  85   2                      delay_ms(10);
  86   2                      sendString("OK\n");
  87   2              }
  88   1              if (strncmp(comm, "DENNY", 5) == 0)
  89   1              {
  90   2                      isAllow = 0;
  91   2                      delay_ms(10);
  92   2                      sendString("OK\n");
  93   2              }
  94   1              if (strncmp(comm, "SET", 3) == 0)
  95   1              {
  96   2                      if (isAllow == 0)
  97   2                      {
  98   3                              isAllow = 1;
  99   3                      }
 100   2                      else 
 101   2                      {
 102   3                              isAllow = 0;
 103   3                      }
 104   2                      delay_ms(10);
 105   2                      sendString("OK\n");
 106   2              }
 107   1              
 108   1              if (isAllow == 0)
 109   1              {
 110   2                      LcdWriteCom(0x80);
 111   2                      LcdWriteStr("    NO ENTRY!   ");
 112   2              }
 113   1              else
 114   1              {
 115   2                      LcdWriteCom(0x80);
 116   2                      LcdWriteStr(dis_data);
 117   2              }
C51 COMPILER V9.53.0.0   UART                                                              04/25/2019 22:01:29 PAGE 3   

 118   1                      
 119   1              sprintf(temp, "M%.1d%03d\n", isAllow, capacity);
 120   1              sendString(temp);
 121   1              delay_ms(10);
 122   1              
 123   1              EA = 1;
 124   1      }
 125          
 126          // 运行命令
 127          void runComm(char *recvBuf)
 128          {       // 此处默认接收字符串第一个字符为数字，选择功能
 129   1              unsigned char dataHead = *recvBuf - '0';
 130   1              EA = 0;
 131   1              stringUper(recvBuf);
 132   1              switch(dataHead)
 133   1              {
 134   2                      case 0:
 135   2                              sendMessage(recvBuf+1);
 136   2                              break;
 137   2                      case 1:         // 设置剩余车位数量
 138   2                              setSpaceComm(recvBuf+1);                
 139   2                              break;
 140   2                      case 2:         // 设置通行状态
 141   2                              setAllow(recvBuf+1);    
 142   2                              break;
 143   2                      case 3:         // 抬杆
 144   2                              bar_up(3000);
 145   2                              break;
 146   2                      case 4:         // 降杆
 147   2                              bar_down(3000);
 148   2                              break;
 149   2                      case 5:         // 进入
 150   2                              enter_into();
 151   2                              break;
 152   2                      case 6:     //
 153   2                              leave_out(recvBuf+1);
 154   2                              break;
 155   2                      default:
 156   2                              break;  
 157   2              }
 158   1              EA = 1;
 159   1      }
 160          
 161          // 发送字符串
 162          void sendString(unsigned char *str)  
 163          {                
 164   1          EA = 0;     
 165   1          while(*str != 0) 
 166   1          {                      
 167   2              SBUF = *str;
 168   2              while(TI == 0);
 169   2              TI=0;    
 170   2              str++;
 171   2          }
 172   1              SBUF = *str;
 173   1          while(TI == 0);
 174   1          TI=0; 
 175   1          EA = 1; 
 176   1      }  
 177          
 178          void UsartConfiguration()
 179          {
C51 COMPILER V9.53.0.0   UART                                                              04/25/2019 22:01:29 PAGE 4   

 180   1              SCON = 0x50;  // 串口工作方式1
 181   1              TMOD = 0x20;  // 定时器1工作方式2
 182   1              /* // 12M 4800bps
 183   1              PCON = 0x80; 
 184   1              TH1 = 0xF3;
 185   1              TL1 = 0xF3;
 186   1              */
 187   1              // 11.0592M 4800bps
 188   1              TH1 = 0xFA;      
 189   1              TL1 = 0xFA;
 190   1              
 191   1              ES = 1;
 192   1              EA = 1;
 193   1              TR1 = 1;
 194   1              TI = 1;
 195   1              RI = 1;
 196   1      }
 197          
 198          void Usart() interrupt 4
 199          {
 200   1              unsigned char recvData;
 201   1              static unsigned char i = 0;
 202   1              unsigned char recvFlag = 0;
 203   1              unsigned char recvLen = 0;
 204   1              char recvBuf[17];
 205   1              
 206   1              if (RI == 1)
 207   1              {
 208   2                      RI = 0;
 209   2                      recvData = SBUF;
 210   2                      if (recvData != '\n' && recvData != '\r' && i < 16)
 211   2                      {
 212   3                              recvBuf[i++] = recvData;
 213   3                      }
 214   2                      else 
 215   2                      {
 216   3                              recvBuf[i] = '\0';
 217   3                              recvLen = i;
 218   3                              i = 0;
 219   3                              recvFlag = 1;
 220   3                      }
 221   2              }
 222   1              if (recvFlag == 1)
 223   1              {
 224   2                      runComm(recvBuf);
 225   2                      recvFlag = 0;
 226   2              }
 227   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1100    ----
   CONSTANT SIZE    =    122    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =      1      91
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
